apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'testing.OpenClass'
}
ext {
    room_version = '2.2.3'
    dagger_version = '2.16'
    lifecycle_viewmodel_version = '2.2.0'
    lifecycle_extensions_version = '2.2.0'
    hamcrestVersion = '1.3'
    androidXTestExtKotlinRunnerVersion = '1.1.1'
    androidXTestCoreVersion = '1.2.0'
    robolectricVersion = '4.3.1'
    archTestingVersion = '2.0.0'
    mockito = "2.8.9"
    mockito_android = "2.25.0"
    mockwebserver = "3.8.1"
    fragment_version = "1.2.5"
    kotlin = "1.3.72"
    navigation = "2.3.0-alpha01"
    espressoVersion = "3.3.0"
    arch_core = "2.1.0"
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.dnevtukhova.searchfilmsapp"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 3
        versionName "1.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility = 1.8
        sourceCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

dependencies {
    // implementation "com.android.support:appcompat-v7:28.0.0"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.android.support:appcompat-v7:29.0.0'
    implementation 'com.android.support:design:29.0.0'

    //testing
    testImplementation 'junit:junit:4.12'
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "org.mockito:mockito-core:$mockito"
    testImplementation "org.mockito:mockito-inline:$mockito"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver"

    // Required for instrumented tests
    androidTestImplementation 'com.android.support:support-annotations:24.0.0'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation "org.mockito:mockito-core:$mockito"
    androidTestImplementation "org.mockito:mockito-android:$mockito_android"
  //  androidTestImplementation "org.mockito:mockito-inline:$mockito_android"
  //  androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
   // debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_core"

    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation "com.github.bumptech.glide:glide:4.11.0"
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'

    // network
    implementation "com.squareup.retrofit2:retrofit:2.6.0"
    implementation "com.squareup.retrofit2:converter-gson:2.6.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.12.6"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:3.12.6"
    implementation("com.squareup.picasso:picasso:2.71828") {
        exclude group: 'com.squareup.okhttp3'
    }

    implementation 'jp.wasabeef:picasso-transformations:2.2.1'



    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    //rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'

//    def firebase_version = '20.2.3'
//    implementation "com.google.firebase:firebase-messaging:$firebase_version"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation "android.arch.lifecycle:reactivestreams:1.1.1."
    implementation "androidx.room:room-rxjava2:$room_version"

    implementation 'androidx.fragment:fragment-ktx:1.2.5'
    implementation 'androidx.core:core-ktx:1.3.0'

    //dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_viewmodel_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_viewmodel_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_viewmodel_version"
    //noinspection LifecycleAnnotationProcessorWithJava8
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_viewmodel_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_viewmodel_version"
    implementation "org.jetbrains.kotlin:kotlin-allopen:$kotlin"
    implementation "androidx.navigation:navigation-testing:$navigation"
}
